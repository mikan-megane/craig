# docker compose run --rm bot sh /app/Docker/init.sh

services:
  bot:
    build: Docker
    image: carig
    restart: unless-stopped
    working_dir: /app/apps/bot
    volumes:
      - .:/app
    environment:
      TZ: Asia/Tokyo
    depends_on:
      - postgres
  # dashboard:
  #   build: Docker
  #   image: carig
  #   restart: unless-stopped
  #   working_dir: /app/apps/dashboard
  #   volumes:
  #     - .:/app
  #   environment:
  #     TZ: Asia/Tokyo
  #   ports:
  #     - 3015:3000
  download:
    build: Docker
    image: carig
    restart: unless-stopped
    working_dir: /app/apps/download
    volumes:
      - .:/app
    environment:
      TZ: Asia/Tokyo
    ports:
      - 3016:3000
  tasks:
    build: Docker
    image: carig
    restart: unless-stopped
    working_dir: /app/apps/tasks
    volumes:
      - .:/app
    environment:
      TZ: Asia/Tokyo

  postgres:
    image: postgres
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    restart: unless-stopped
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres:
  redis:
